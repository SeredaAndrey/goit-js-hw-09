{"mappings":"iiBAAA,IAAAA,EAAAC,EAAA,SAEA,MAAMC,EAAO,CACXC,KAAMC,SAASC,cAAc,SAC7BC,MAAOF,SAASC,cAAc,kBAC9BE,KAAMH,SAASC,cAAc,iBAC7BG,OAAQJ,SAASC,cAAc,oBAG3BI,EAAa,CACjBH,MAAO,KACPC,KAAM,KACNC,OAAQ,MAmCV,SAASE,EAAcC,EAAUL,GAC/B,OAAO,IAAIM,SAAQ,CAACC,EAASC,KAC3BC,YAAW,KACaC,KAAKC,SAAW,GAEpCJ,EAAQ,qBAAqBF,QAAeL,OAE5CQ,EAAO,oBAAoBH,QAAeL,MAAU,GAErDA,EAAM,G,CAzCbJ,EAAKC,KAAKe,iBAAiB,UAAUC,IACnCA,EAAIC,iBACJC,QAAQC,IAAI,2BAcd,SAA2BC,EAAYZ,EAAUL,GAC/C,IAAIkB,EAAeC,OAAOF,GAC1B,IAAK,IAAIG,EAAO,EAAGA,GAAQf,EAAUe,IACnChB,EAAcgB,EAAMF,GACjBG,MAAKC,IACJP,QAAQC,IAAI,IAAKM,GACjBC,EAAA7B,GAAS8B,OAAOC,QAAQH,EAAO,IAEhCI,OAAMC,IACLZ,QAAQC,IAAI,IAAGW,GACfJ,EAAA7B,GAAS8B,OAAOI,QAAQD,EAAM,IAElCT,GAAgBC,OAAOnB,E,CAzBzB6B,CAAkB1B,EAAWH,MAAOG,EAAWD,OAAQC,EAAWF,KAAK,IAGzEL,EAAKI,MAAMY,iBAAiB,SAASC,IACnCV,EAAWH,MAAQa,EAAIiB,OAAOC,KAAK,IAErCnC,EAAKK,KAAKW,iBAAiB,SAASC,IAClCV,EAAWF,KAAOY,EAAIiB,OAAOC,KAAK,IAEpCnC,EAAKM,OAAOU,iBAAiB,SAASC,IACpCV,EAAWD,OAASW,EAAIiB,OAAOC,KAAK,G","sources":["src/js/03-promises.js"],"sourcesContent":["import Notiflix from 'notiflix';\n\nconst refs = {\n  form: document.querySelector('.form'),\n  delay: document.querySelector('[name=\"delay\"]'),\n  step: document.querySelector('[name=\"step\"]'),\n  amount: document.querySelector('[name=\"amount\"]'),\n};\n\nconst promiseVar = {\n  delay: null,\n  step: null,\n  amount: null,\n};\n\nrefs.form.addEventListener('submit', evt => {\n  evt.preventDefault();\n  console.log('start promise generator');\n  createLoopPromise(promiseVar.delay, promiseVar.amount, promiseVar.step);\n});\n\nrefs.delay.addEventListener('input', evt => {\n  promiseVar.delay = evt.target.value;\n});\nrefs.step.addEventListener('input', evt => {\n  promiseVar.step = evt.target.value;\n});\nrefs.amount.addEventListener('input', evt => {\n  promiseVar.amount = evt.target.value;\n});\n\nfunction createLoopPromise(startDelay, position, delay) {\n  let delayPromise = Number(startDelay);\n  for (let item = 1; item <= position; item++) {\n    createPromise(item, delayPromise)\n      .then(result => {\n        console.log(`✅`, result);\n        Notiflix.Notify.success(result);\n      })\n      .catch(error => {\n        console.log(`❌`, error);\n        Notiflix.Notify.failure(error);\n      });\n    delayPromise += Number(delay);\n  }\n}\n\nfunction createPromise(position, delay) {\n  return new Promise((resolve, reject) => {\n    setTimeout(() => {\n      const shouldResolve = Math.random() > 0.3;\n      if (shouldResolve) {\n        resolve(`Fulfilled promise ${position} in ${delay}ms`);\n      } else {\n        reject(`Rejected promise ${position} in ${delay}ms`);\n      }\n    }, delay);\n  });\n}\n"],"names":["$iU1Pc","parcelRequire","$ce04d3a99e08e73b$var$refs","form","document","querySelector","delay","step","amount","$ce04d3a99e08e73b$var$promiseVar","$ce04d3a99e08e73b$var$createPromise","position","Promise","resolve","reject","setTimeout","Math","random","addEventListener","evt","preventDefault","console","log","startDelay","delayPromise","Number","item","then","result","$parcel$interopDefault","Notify","success","catch","error","failure","$ce04d3a99e08e73b$var$createLoopPromise","target","value"],"version":3,"file":"03-promises.4994800f.js.map"}